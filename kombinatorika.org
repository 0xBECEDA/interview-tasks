* Интро
Шпаргалка по комбинаторике

Комбинаторика изучает сколькими способами можно перестаивть элементы в
множестве согласно заданному условию

* Модели комбинаторных конфигураций

**  Размещение
Это упорядоченный набор из k различных элементов из некоторого
множества различных n элементов.

Т.е. есть множество (1 2 3 4 5), и есть набор из этого множества
(1 2 3) (2 3 4) (3 4 5). При этом размещение учитывает порядок,
в котором идут элементы. Т.е. (1 2 3) и (3 2 1) с т.з. размещения -
это разные наборы,хотя в них одни и те же элементы.

*** Формула для нахождения размещений БЕЗ повторений
Т.е. в каждом отдельном размещении нет повторяющихся элементов.
    n!
   ----
  (n-k)!

Процедура для этой формулы:
#+BEGIN_SRC lisp
  (defun factorial (n)
    (if (= n 0)
        1
        (* n (factorial (- n 1)))))

  (defun no-rep-placements (n k)
    (let* ((numerator (factorial n))
           (diff-fact (factorial (- n k))))
      (/ numerator diff-fact)))
#+END_SRC

При ~k = n~ количество размещений равно количеству перестановок
порядка n, т.е. n!.Т.е. если у меня множество из 5 элементов и нужно,
чтоб в каждом размещении было 5 элементов, то кол-во размещений = 5!

*** Формула для нахождения размещений C повторениями
Т.е. в каждом отдельном размещении есть повторяющиеся элементы.
Высчитывается как n^k. Т.е. если в множестве 4 элемента и мы хотим
получить размещения с повторяющимися элементами по 3 элемента в
каждом, то высчитывать будем как 4^3.

** Сочетание
https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D1%87%D0%B5%D1%82%D0%B0%D0%BD%D0%B8%D0%B5

Это из n по k набор элементов, выбранных из данных n элементов.
Наборы, отличающиеся только порядком следования элементов (но
не составом), считаются одинаковыми, этим сочетания
отличаются от размещений. Т.е. с т.з. сочетания (1 2 3) и (3 2 1) -
это одно и то же.

*** Формула для нахождения сочетаний БЕЗ повторений
Т.е. в каждом отдельном сочетании элементы не повторяются.

Число сочетаний из n по k равно биномиальному коэффициенту, т.е.
(n)     n!
--- =  ----
(k)   k!(n-k)!

Предположим, у нас 5 элементов в множестве. 5 - это n, и мы хотим
выяснить кол-во сочетаний с неповторяющимися элементами по 2 элемента
в каждом для этого множества:
По форрмуле получается 5! / 2!(5-2)! = 120 / 2 * 6 = 10.

Про биноминальный коэффициент см. здесь:
https://ru.wikipedia.org/wiki/%D0%91%D0%B8%D0%BD%D0%BE%D0%BC%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B9_%D0%BA%D0%BE%D1%8D%D1%84%D1%84%D0%B8%D1%86%D0%B8%D0%B5%D0%BD%D1%82

Пишем процедуру для этой формулы:

#+BEGIN_SRC lisp
  (defun factorial (n)
    (if (= n 0)
        1
        (* n (factorial (- n 1)))))

  (defun no-rep-combin (n k)
    (let* ((numerator (factorial n))
           (k-fact (factorial k))
           (diff-fact (factorial (- n k)))
           (denumerator (* k-fact diff-fact)))
      (/ numerator denumerator)))
#+END_SRC

** Перестановка
Это упорядоченный набор без повторений. Обычно он рассматривается как
биекция - т.е. соответствие одного множества другому, где каждый
элемент одного множества соответствует каждому элементу другого
множества.

Т.е. если у нас есть множество (1 2 3 4 5), то его переставнока - это
(5 4 3 2 1), поскольку каждому элементу соответствует каждый элемент,
а вот (3 2 1) уже не будет перестановкой, поскольку тут не установить
соответствие каждого элемента с каждым.

*** Формула
Число всех перестановок из n элементов равно числу размещений из n
по n, то есть факториалу.

Т.е. если у нас в множестве 3 элемента, то кол-во перестановок в них
= 3! = 6.

** Композиция
Это разложени числа на его слагаемые. Т.е. 5 мы представляем как
4 + 1, 2 + 3 и т.д.

Кол-во композиций считается как 2^(n-1), где n - величина, которую
надо разложить.

В композиции важен порядок следоваия элементов.
Поэтому 2 + 3 и 3 + 2 - это не одно и то же с т.зэ композиции.

** Разбиение
Это то же самое, что композиция, но порядок элементов неважен,
поэтому 2 + 3 и 3 + 2 с т.з. разбиения это одно и то же.

https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B1%D0%B8%D0%B5%D0%BD%D0%B8%D0%B5_%D1%87%D0%B8%D1%81%D0%BB%D0%B0

* Задачи на разбор

Как правильно выбрать формулу см. здесь
https://www.matburo.ru/tv/Kombinatorics_MatBuro.pdf

** Задача 1
Раз в семестр студенты распределяются в проекты.
В этот раз в проект про распознавание марок автомобилей по фотографии
заявки подали 7 юношей и 4 девушки.
Проект набирает 6 студентов, среди которых должны быть хотя бы 2
девушки. Сколько способов выбрать студентов для этого проекта?

*** Разбор
Есть 2 множества юношей и девушек, в которых по 7 и 4 чел.
Нужно посчитать кол-во сочетаний с неповторяющимися элементами -
потому что нам все равно, в каком порядке будут ребята в проекте, а
так же потому, что в одной группе не может быть один и тот же человек
дважды.

Известно, что в размещении должно быть 6 элементов.
Соответственно возможны варианты: 3 + 3, 2 + 4 и 4 + 4 и внутри них
юноши и девушки могут быть размещены как угодно.

- Поэтому считаем размещения для каждого подмножества юношей и девушек
  отдельно: например, размещение 3 юношей из 7 возможных.

Используем процедуры, определенные для посика кол-ва сочетаний без
повторяющихся элементов:

#+BEGIN_SRC lisp
  ;; девушки
  (no-rep-combin 4 3)
  (no-rep-combin 4 2)
  (no-rep-combin 4 4)

  ;; парни
  (no-rep-combin 7 3)
  (no-rep-combin 7 2)
  (no-rep-combin 7 4)
#+END_SRC

- затем перемножаем полученные размещения парней и девушек друг с другом
  попарно так, чтоб суммарно кол-во k элементов было = 6.

#+BEGIN_SRC lisp
  (* (no-rep-combin 4 3)
     (no-rep-combin 7 3))

  (* (no-rep-combin 4 4)
     (no-rep-combin 7 2))

  (* (no-rep-combin 4 2)
     (no-rep-combin 7 4))
#+END_SRC

- и складываем полученные размещения, поскольку нам надо знать, сколько
  всего вариантов:

#+BEGIN_SRC lisp
  (+ (* (no-rep-combin 4 3)
        (no-rep-combin 7 3))
     (* (no-rep-combin 4 4)
        (no-rep-combin 7 2))
     (* (no-rep-combin 4 2)
        (no-rep-combin 7 4)))
#+END_SRC

** Задача 2

У Маши есть полное собрание энциклопедий, включающее 15 пронумерованных
томов, и полка, разделенная на 15 ячеек. Маша решила расставить
энциклопедии по этим ячейкам, руководствуясь следующими правилами:

- книги расставляются последовательно (начиная с первого тома, потом
  второй, затем третий и тд);

- первый том ставится в произвольную ячейку;

- каждый следующий том ставится в любую соседнюю ячейку с уже занятыми;
  в одной ячейке может находиться только одна книга.

Сколькими способами можно расставить тома энциклопедии? В ответе укажите
одно целое число.

*** Разбор не доделан

У нас есть:
- 15 неповторяющихся элементов

- они расставляются последовательно: т.е. комбинация (1 2 3 4) возможна,
  а (1 3 2 4) - нет

- каждый следующий том может быть расставлен только в соседнюю ячейку с
  уже занятыми - при этом вставляться он должен таким образом, чтоб не
  нарушать порядок томов.

- первый том будет поставлен в любую чейку - следовательно, если первый
  том поставили в третью ячейку, то у нас не влезет все 15 томов,
  поскольку первые 2 ячейки окажутся пустыми: мы не можем нарушать
  порядок томов.

  Убывающее кол-во томов намекает нам, что это может задача на формулу
  размещений, поскольку в ней убывающий факториал. И теперь к нему надо
  как-то приделать условие, согласно которому, у нас тома могут идти
  строго подряд.

** Задача 3

На родительское собрание в школу пришли 6 супружеских пар. Классному
руководителю для организации родительского комитета необходимо выбрать из
них ровно 3 человека. Комитет не должен включать пару, состоящую в
браке. Сколькими способами можно организовать родительский комитет?

*** Разбор
- есть 3 множества по 2 элемента в каждом

- мы знаем, что из каждого множества можно взять только 1 элемент во
  время одного эксперимента

- элементы не повторяются

Итак, я думаю, что это задание на поиск сочетаний без повторений, потому
что:
- нет повторений
- порядок элементов неважен

Есть 3 варианта организации родительского комитета:
- 3 женщин
- 3 мужчин
- 2 женщины + 1 мужчина
- 2 мужчин + 1 женщина

Мы можем разделить пары на два множества: мужчин и женщин, в каждом
приходится по 6 чел.

Считаем кол-во вариантов, если комитет состоит только из мужчин или
только из женщин - если б мы искали комитет, в котором состоит ровно 6
чел и при этом должно быть 3 мужчин и 3 женщин, то размещения пришлось бы
не складывать, а умножать, как в задаче 1.
#+BEGIN_SRC lisp
  (+ (no-rep-combin 6 3)
     (no-rep-combin 6 3))
#+END_SRC

Теперь считаем варианты для:
- 2 женщины + 1 мужчина
- 2 мужчин + 1 женщина

В этом случае размещения придется сначала умножить, а потом сложить
полученные произведения, как в задаче 1.
#+BEGIN_SRC lisp
  (+ (* (no-rep-combin 6 1)
        (no-rep-combin 5 2))
     (* (no-rep-combin 6 1)
        (no-rep-combin 5 2)))
#+END_SRC

Теперь складываем это все:
#+BEGIN_SRC lisp
  (+ (* 2 (* (no-rep-combin 6 1)
             (no-rep-combin 5 2)))
     (* 2 (no-rep-combin 6 3)))
#+END_SRC

** Задача 4

В стране 20 городов. Правительство выделило деньги на строительство 187
дорог. Каждая дорога соединяет два разных города и не проходит через другие
города.  Между любыми двумя городами не может быть больше
одной дороги. Сколько существует способов проложить дороги?

*** Разбор

Итак:
- у нас нет повторений - каждый город уникальный, а между любыми двумя
  городами может быть только 1 дорога
- порядок неважен

Скорее всего, это опять задача на сочетания. Каждый город может быть
соединен с любым из других 19 городов. Это значит, что может быть всего
190 дорог для всех городов. Но у нас только 187. Значит, нужно просто
выбрать сочетания для 187 из 190 дорог.

Получается 1125180:
#+BEGIN_SRC lisp
  (no-rep-combin 190 187)
#+END_SRC

** Задача 5
Среди 126 студентов каждый имеет ровно трёх друзей (понятие «быть другом»
симметрично). Студенты строго упорядочены по рейтингу (студентов с равным
рейтингом нет). Будем говорить, что студент учится лучше своих друзей,
если он по рейтингу выше хотя бы двух из своих друзей. Какое максимальное
значение может принимать число студентов, которые учатся лучше своих друзей?

*** Разбор не доделан
- нам важен порядок
- и нет повторений - потому что нет двух одинаковых рейтингов или
  студентов
- не нужно выбрать все n элементов

Следовательно, это задача на размещения без повторений.

У нас есть 126 студентов и мы их можем разбить по 4 человека - потому что
у каждого студента есть ровно 3 друга.  Студент, чтоб считаться лучшим,
должен учиться лучше минимум двух из них, т.е. так же он может считаться
лучшим, если учится лучше всех из своих друзей.

#+BEGIN_SRC lisp
  (no-rep-placements 126 4)
#+END_SRC

* Задачи из методички новосиб. техвуз
** Задача 6
Есть 3 железные дороги, идущие от Б до Н, и 4, идущие от Н до Т.
Сколькими способами можно выбрать дорогу от Б до Т через Н?

Итак, это задача на сочетания без повоторений, потому что:
- дороги и города уникальны
- порядок выбора дорог неважен

У нас есть 2 множества: дороги от Б до Н и дороги от Н до Т.
Представим это как множества (1 2 3) и (1 2 3 4)

Поскольку задачка маленькая, а мы неуверены в решении, то пробуем
посмотреть вручную все возможные способы добраться от Б до Т.

У нас будут следующие сочетания путей:
(1 1)
(1 2)
(1 3)
(1 4)

(2 1)
(2 2)
(2 3)
(2 4)

(3 1)
(3 2)
(3 3)
(3 4)

Вручную видно, что кол-во возмодных способов = 12.
Т.е. если использовать процедуры, написанные мной для вычисления
сочетаний, получится такое:

#+BEGIN_SRC lisp
  (* (no-rep-combi 4 1)
     (no-rep-combi 3 1))
#+END_SRC

Где n - это кол-во элементов в множествах - 3 или 4, а k - это кол-во
элементов в сочетании, которое мы хотим видеть из каждого множества за 1
эксперимент. Умножение используется поскольку нам нужны сочетания обоих
множеств.

** Задача 7

Сколькими способами можно разместить 12 гостей за столом?

Я думаю, что это задача на перестановки: надо выбрать все элементы, но
при этом порядок неважен. Поэтому ответ 12! = 479 001 600.

** Задача 8

В конкурсе красоты участвует 8 девушек. Сколькими способами можно между
ними распределить места, если 1 место = 1 девушка?

Задача как с гостями за столом. Ответ 8! = 40 320

** Задача 9

Сколькими способами может быть присуждена 1 и 2 место двум лицам из
группы в 9 человек?

Это задача на размещения без повторений:
- нет повторений
- надо выбрать не все n элементов - (иначе это была бы задача на
  распределение всех мест)
- порядок важен

Получается, что из 9 чел. каждый может претендовать на первую
премию. Потом 1 получает первое место и остается 8 чел, каждый из которых
может претендовать на второе место.

Т.е. у нас получается в первый раз n = 9, а k = 1, а во второй раз n = 8,
а k = 1. Если в каком-то размещении или сочетании надо сделать размещение
или сочетания по 1 элементу, то кол-во этих сочетний или размещений будет
= n элементов из исходного множества.

Следовательно, в этом задании можно выкинуть формулу и просто
переменожить 9 * 8 = 72

** Задача 10
Сколько трехзначных чисел можно образовать из цифр 1 2 3 5, если каждую
из тих цифр можно:

- испльзовать в числе 1 раз
- использовать в числе более 1 раза

1.
Это задача на размещения без повторений:
- нет повторений
- порядо цифр важен - т.е. 123 != 321

Получается, у нас множество из 4х цифр, для которых надо сгенерировать
сочетания по 3 элемента. Получается, что на первом месте может стоять 1
из 4х цифр, на втором - одна из трех и т.д. Задача похожа на предыдущую,
получаем: 4 * 3 * 2 = 24

2. Размещение с повторениями.
В данном случае ответ такой же. По формуле кол-во размещений находится
как n^k. Но получается, что у нас k = 1, а любое число в 1 степени - это
то же самое число.

** Задача 11
В купе поезда два противомоложных пятиместных дивана. Из 10 пассажиров 4
хотят ехать по ходу, 3 против хода и остальным все равно как
сидеть. Сколькими способами их можно рассладить?

Я думаю, что это задача на размещения без повторений.
Потому что:
- порядок сидящих пассажиров важен, они ж неоднородные
- нет повторений

Делим места на два множества: против хода и по ходу. Это значит, что
четверо могут сесть только на одни 5 мест, еще трое - строго на другие 5
мест, а трое, которым все равно, как ехать, на оставшиеся места после
того, как другие "сели". Т.е. получатся, что трое, которым все равно,
будут размещаться не на 5 местах или на 10, а на трех, потому что другие
заняты.
#+BEGIN_SRC lisp
  (* (no-rep-placements 5 4)
     (no-rep-placements 5 3)
     (no-rep-placements 3 3))
#+END_SRC

** Задача 12
Хор состоит из 20 певцов. Сколькими способами можно в течение трех дней
выбирать по 15 певцов так, чтобы каждый день были разные составы хора?

Итак, я думаю, что это задача на сочетания без повторений. Потому что:
- составы хора должны быть уникальны
- нужно выбрать не все n элементов
- порядок неважен: мне все равно, будет хор стоять как 1 2 3 4 5 или как
  5 2 3 4 1

Ответ: 3 726 037 653 024
#+BEGIN_SRC lisp
  (no-rep-combin 20 15)
  (* 15504 15503 15502)
#+END_SRC

** Задача 13
В меню столовой имеется 5 видов первых блюд и 3 вида вторых, а на десерт
всегда предлагается кофе или чай. Сколькими способами можно выбрать обед
так, чтоб:
- он состояил из 1 первого, 1 второго и 1 третьего блюда?
- он состояиз из двух неповторяющихся вторых блюд и одного третьего?

Это явно задача на неповторяющиеся сочетания.

Для задания 1 ответ 30.
#+BEGIN_SRC lisp
  (* (no-rep-combin 5 1)
     (no-rep-combin 3 1)
     (no-rep-combin 2 1))
#+END_SRC

Для задания 2 ответ 6.
#+BEGIN_SRC lisp
  (* (no-rep-combin 3 2)
     (no-rep-combin 2 1))
#+END_SRC

** Задача 14
Сколько чисел больше 100 можно записать с помощью цифр 0 2 4 6, чтоб ни в
одном числе цифра не повтрялась и ни ожно число не начиналось с нуля?

Это явно задача на размещеия без повторений: потому что ващен порядок в
числах. Нужно реализовать 2 ограничения: числа не должны быть больше 100
и не должны начинаться с нуля.

Итак, получается, что у нас возможны только двузначные числа - потому что
в 100 содержится два нуля, а по условию в числе не могут повторяться
цифры.
Так же получается, что цифры 2 4 6 могут стоять на обоих разрядах числа,
а ноль - только в младшем.

Ответ: 9, но я хз как считать это с применением формул.
#+BEGIN_SRC lisp
  20
  40
  60

  26
  24

  42
  46

  62
  64
#+END_SRC
